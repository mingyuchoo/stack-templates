{-# START_FILE stack.yaml #-}
# https://www.stackage.org/lts-20.24
resolver: ghc-9.6.3

packages:
- .

extra-deps: []

flags: {}

extra-package-dbs: []

nix:
  enable: true
  pure: true
  packages:
  - zlib
  - glpk
  - pcre
  #shell-file: shell.nix
  nix-shell-options: []
  path: []
  add-gc-roots: false

{-# START_FILE package.yaml #-}
name:                {{name}}
version:             0.1.0.0
github:              {{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}
license:             MIT
author:              {{author-name}}{{^author-name}}Author name here{{/author-name}}
maintainer:          {{author-email}}{{^author-email}}example@example.com{{/author-email}}
copyright:           {{copyright}}{{^copyright}}{{year}}{{^year}}2023{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}
synopsis:            Short description of your package
category:            {{category}}{{^category}}Learning{{/category}}
description:         Please see the README on GitHub at <https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme>

extra-source-files:
- README.md
- CHANGELOG.md

dependencies:
- base >= 4.18 && < 5
- containers

default-extensions:
- StandaloneKindSignatures

ghc-options:
- -Wall
- -O2
- -haddock

language: GHC2021

library:
  source-dirs: src

executables:
  {{name}}-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -dynamic
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N4
    dependencies:
    - {{name}}

tests:
  {{name}}-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -dynamic
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N4
    dependencies:
    - {{name}}
    - hspec
    - doctest
    - doctest-discover

{-# START_FILE Setup.hs #-}
import Distribution.Simple

main :: IO ()
main = defaultMain

{-# START_FILE test/Spec.hs #-}
-- {-# OPTIONS_GHC -F -pgmF doctest-discover #-}
-- {-# OPTIONS_GHC -F -pgmF hspec-discover   #-}

import Test.Hspec

main :: IO ()
main = hspec spec

spec :: Spec
spec = do
    describe "Given Prelude" $ do
        context "when use `read` function" $ do
            it "should parse integers" $ do
                read "10" `shouldBe` (10 :: Int)
            it "should parse floating-point numbers" $ do
                read "2.5" `shouldBe` (2.5 :: Float)

{-# START_FILE src/Lib.hs #-}
module Lib
    ( someFunc
    ) where

someFunc :: IO ()
someFunc = putStrLn "someFunc"

{-# START_FILE app/Main.hs #-}
module Main
    ( main
    ) where

import Lib

main :: IO ()
main = someFunc

{-# START_FILE README.md #-}
# {{name}}

## How to build

```bash
stack build
```

## How to test as watch mode

```bash
stack test --fast --file-watch --watch-all
# or
ghcid
```

## How to run

```bash
stack run
```

{-# START_FILE CHANGELOG.md #-}
# Changelog for `{{ name }}`

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to the
[Haskell Package Versioning Policy](https://pvp.haskell.org/).

## Unreleased

## 0.1.0.0 - YYYY-MM-DD

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2023{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

{-# START_FILE .gitignore #-}
.stack-work/
*~
